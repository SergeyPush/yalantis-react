{"version":3,"sources":["redux/actionTypes.js","redux/userReducer.js","redux/rootReducer.js","redux/store.js","components/Employee.jsx","components/Calendar.jsx","components/Contact.jsx","components/Contacts.jsx","redux/userActions.js","App.jsx","reportWebVitals.js","index.js"],"names":["FETCH_USERS","SELECT_USER","RESTORE_SELECTED","initState","fetchedUsers","selectedUsers","rootReducer","combineReducers","users","state","type","payload","candidate","find","user","id","updatedList","filter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Employee","employee","months","firstName","lastName","dob","date","Date","year","getFullYear","month","getMonth","day","getDate","data-testid","Calendar","userList","useSelector","monthNames","employeeBirthdsys","reduce","acc","emp","undefined","monthToIterate","Object","keys","className","length","map","Contact","matсhedUsers","dispatch","useDispatch","userIsChecked","isSelected","selected","checked","onChange","handleCheckUser","Contacts","alphabet","split","useEffect","a","axios","get","response","data","localStorage","getItem","JSON","parse","error","console","log","setItem","stringify","letter","toLowerCase","toUpperCase","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ab18e8c.chunk.js","sourcesContent":["export const FETCH_USERS = \"FETCH_USERS\";\nexport const HANDLE_USER = \"HANDLE_USER\";\nexport const SELECT_USER = \"SELECT_USER\";\nexport const RESTORE_SELECTED = \"RESTORE_SELECTED\";\n","import { FETCH_USERS, SELECT_USER, RESTORE_SELECTED } from \"./actionTypes\";\n\nconst initState = {\n  fetchedUsers: [],\n  selectedUsers: [],\n};\n\nexport const userReducer = (state = initState, { type, payload }) => {\n  switch (type) {\n    case FETCH_USERS:\n      return { ...state, fetchedUsers: payload };\n\n    case SELECT_USER:\n      const candidate = state.selectedUsers.find(\n        (user) => user.id === payload.id\n      );\n      if (!candidate) {\n        return { ...state, selectedUsers: [...state.selectedUsers, payload] };\n      }\n      const updatedList = state.selectedUsers.filter(\n        (user) => user.id !== payload.id\n      );\n      return { ...state, selectedUsers: updatedList };\n\n    case RESTORE_SELECTED:\n      return { ...state, selectedUsers: payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { userReducer } from \"./userReducer\";\n\nconst rootReducer = combineReducers({\n  users: userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Employee = ({ employee, months }) => {\n  const { firstName, lastName, dob } = employee;\n  const date = new Date(dob);\n\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n  return (\n    <div>\n      <p data-testid=\"employee\">{`${lastName} ${firstName} - ${day} ${months[month]} ${year} year`}</p>\n    </div>\n  );\n};\n\nEmployee.propTypes = {\n  employee: PropTypes.object.isRequired,\n  months: PropTypes.array.isRequired,\n};\n\nexport default Employee;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Employee from \"./Employee\";\n\nconst Calendar = () => {\n  const userList = useSelector((state) => state.users.selectedUsers);\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const employeeBirthdsys = userList.reduce((acc, emp) => {\n    const month = new Date(emp.dob).getMonth();\n    if (acc[month] === undefined) {\n      return { ...acc, [month]: [emp] };\n    }\n    return { ...acc, [month]: [emp, ...acc[month]] };\n  }, {});\n\n  const monthToIterate = Object.keys(employeeBirthdsys);\n\n  return (\n    <div className=\"calendar\">\n      <h1 className=\"calendar-title\">Employees Birthday</h1>\n\n      <>\n        {userList.length > 0 ? (\n          monthToIterate.map((month) => {\n            return (\n              <div key={month} className=\"emp-list\">\n                <h3 className=\"calendar-month-title\">{monthNames[month]}</h3>\n                {employeeBirthdsys[month].map((employee) => (\n                  <Employee\n                    key={employee.id}\n                    employee={employee}\n                    months={monthNames}\n                  />\n                ))}\n              </div>\n            );\n          })\n        ) : (\n          <p>No selected employees</p>\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Contact = ({ matсhedUsers }) => {\n  const dispatch = useDispatch();\n  const selectedUsers = useSelector((state) => state.users.selectedUsers);\n\n  const handleCheckUser = (user) => {\n    dispatch({\n      type: \"SELECT_USER\",\n      payload: user,\n    });\n  };\n\n  const userIsChecked = (user) => {\n    const isSelected = selectedUsers.find(\n      (selected) => selected.id === user.id\n    );\n    if (!isSelected) {\n      return false;\n    }\n    return isSelected ? true : false;\n  };\n\n  return (\n    <div>\n      {matсhedUsers.map((user) => (\n        <div className=\"user-item\" key={user.id}>\n          <p className=\"user-data\">{`${user.lastName} ${user.firstName}`}</p>\n          <input\n            type=\"checkbox\"\n            checked={userIsChecked(user)}\n            onChange={() => handleCheckUser(user)}\n            data-testid=\"checkbox\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nContact.propTypes = {\n  matсhedUsers: PropTypes.array.isRequired,\n};\n\nexport default Contact;\n","import React, { useEffect } from \"react\";\nimport { fetchUsers, restoreSelected } from \"../redux/userActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Contact from \"./Contact\";\n\nconst Contacts = () => {\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.fetchedUsers);\n  const selectedUsers = useSelector((state) => state.users.selectedUsers);\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n    dispatch(restoreSelected());\n  }, [dispatch]);\n\n  useEffect(() => {\n    localStorage.setItem(\"selectedUsers\", JSON.stringify(selectedUsers));\n  }, [selectedUsers]);\n\n  return (\n    <div className=\"contact\">\n      <h1>Employees</h1>\n      <div className=\"letter-list\">\n        {alphabet.map((letter) => {\n          const matсhedUsers = users.filter(\n            (user) => user.lastName[0].toLowerCase() === letter\n          );\n\n          return (\n            <div key={letter} className=\"letter-item\">\n              <p className=\"capital-letter\">{letter.toUpperCase()}</p>\n              {matсhedUsers.length > 0 ? (\n                <Contact matсhedUsers={matсhedUsers} />\n              ) : (\n                <p>\n                  <span className=\"line\"></span>\n                </p>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import axios from \"axios\";\nimport { FETCH_USERS, RESTORE_SELECTED } from \"./actionTypes\";\n\nconst BASE_URL =\n  \"https://yalantis-react-school-api.yalantis.com/api/task0/users\";\n\nexport const fetchUsers = () => async (dispatch) => {\n  const response = await axios.get(BASE_URL);\n\n  dispatch({\n    type: FETCH_USERS,\n    payload: response.data,\n  });\n};\n\nexport const restoreSelected = () => (dispatch) => {\n  try {\n    const data = localStorage.getItem(\"selectedUsers\");\n    if (data) {\n      dispatch({\n        type: RESTORE_SELECTED,\n        payload: JSON.parse(data),\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import Calendar from \"./components/Calendar\";\nimport Contacts from \"./components/Contacts\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Contacts />\n      <Calendar />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./styles/app.scss\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}